version: '3'

networks:
  node.networks:
    driver: bridge

services:
  app:
    build: .
    entrypoint: dockerize -wait tcp://postgres:5432 -wait tcp://redis:6379 -timeout 60s ./.docker/scripts/entrypoint.sh
    working_dir: /home/node/app
    container_name: node.app
    tty: true
    depends_on:
      - redis
      - postgres
    networks:
      - node.networks
    volumes:
      - .:/home/node/app:z
    ports:
      - "3333:3333"
      - "9229:9229"

  nginx:
    build: .docker/nginx
    container_name: node.nginx
    restart: always
    tty: true
    depends_on:
      - app
      - postgres
    ports:
      - '80:80'
      - '433:433'
    volumes:
      - .:/home/node/app:z
    networks:
      - node.networks

  # Commented because it still doesn't work on the ARM chip (M1)
  #
  #  mysql:
  #    image: mysql:8
  #    container_name: node.mysql
  #    tty: true
  #    networks:
  #      - node.networks
  #    ports:
  #      - 3306:3306
  #    volumes:
  #      - .docker/mysql/config/mysql.cnf:/etc/mysql/conf.d/custom.cnf:z
  #      - .docker/mysql/data:/var/lib/mysql:z
  #    environment:
  #      MYSQL_USER: root
  #      MYSQL_PASSWORD: root
  #      MYSQL_DATABASE: development
  #      MYSQL_ROOT_PASSWORD: root

  #  mariadb:
  #    image: mariadb
  #    tty: true
  #    restart: always
  #    container_name: node.mariadb
  #    networks:
  #      - node.networks
  #    ports:
  #      - '3306:3306'
  #    volumes:
  #      - .docker/mysql/config/mariadb.cnf:/etc/mysql/conf.d/custom.cnf:z
  #      - .docker/mysql/data:/var/lib/mysql:z
  #    environment:
  #      - MYSQL_PASSWORD=root
  #      - MYSQL_ROOT_PASSWORD=root
  #      - MYSQL_DATABASE=development

  postgres:
    build: .docker/postgres
    tty: true
    restart: always
    container_name: node.postgres
    networks:
      - node.networks
    ports:
      - "5432:5432"
    volumes:
      - node.postgres:/var/lib/postgresql/data:z
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=root
      - POSTGRES_DB=development

  redis:
    image: bitnami/redis:latest
    container_name: node.redis
    tty: true
    networks:
      - node.networks
    ports:
      - "6379:6379"
    volumes:
      - node.redis:/bitnami/redis/data:z
    environment:
      REDIS_PASSWORD: redis
      ALLOW_EMPTY_PASSWORD: 'no'

volumes:
  node.postgres:
  node.redis:
